Node js
called as run time enviroment.
basically when nodejs run our browser. nodejs only run on browser. because every js has jsengine

install node js
after finish. cmd  : commnad prompt
open cmd
write: node --version
!!!!!!!!!!!!!!!

open nodejs app/ terminal
in this terminal js will run

!!!!!!!!!!!!!!!!!!
nodejs command prompt app
mixer of cmd and node js
?????????????????????!!!!!!!!!!!!!!!!!
created new project 
dirname-- directory name -- path of the file name. current which you are working
to run the file in terminal commnad: node file name

// console.log("Ram ram jii. mare ram") <Ram ram jii. mare ram
  console.log(__dirname) <will write the path of folder C:\Users\Priya\OneDrive\Desktop\nodejs pratice 
  console.log(__filename) <will write the file name which you are 
currently working C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js 

!!!!!!!!!!!!!!!!!!!
https://nodejs.org/docs/latest/api/

//how to import modules in nodejs
  //require: inbuilt keyword of js
//OS: operating system
  const os =require('os')
  console.log(os.arch())
  //arch:architecture. we will get architecture of our operating system
<x64

//with os module u can check specification of os.

console.log(os.cpus())
<model: '12th Gen Intel(R) Core(TM) i7-1255U',

console.log(os.hostname())
<LAPTOP-HJ27TO3S

console.log(os.homedir())
<LAPTOP-HJ27TO3S

check free memory in laptop
console.log(os.freemem())
<7446700032

check on node js website docs
https://nodejs.org/docs/latest/api/os.html

 console.log(os.machine())
<7714525184

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
os
path: https://nodejs.org/docs/latest/api/path.html

eg:
 console.log(__filename)
<C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js


  //path module: path module import
  const path = require('path')
  console.log(path.basename('C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js'))
<UsersPriyaOneDriveDesktop
<odejs praticelocalmodules.js
console.log(path.extname('C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js'))
//extension name to check like localmodules.js .  like js
<.js

console.log(path.dirname('C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js'))
<C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js

eg:
const path = require('path')
let mypath=path.parse('C:\Users\Priya\OneDrive\Desktop\nodejs pratice\localmodules.js')
  console.log(mypath)
<{
  root: 'C:',
  dir: 'C:',
  base: 'UsersPriyaOneDriveDesktop\nodejs praticelocalmodules.js',
  ext: '.js',
  name: 'UsersPriyaOneDriveDesktop\nodejs praticelocalmodules'
}

//if i need only name. so i can do
console.log(mypath.name)
<UsersPriyaOneDriveDesktop odejs praticelocalmodules

!!!!!!!!!!!!!!!!!!!!!!!!!!
we can start with filesystem: fs
https://nodejs.org/docs/latest/api/fs.html

u can read and write file in nodejs
eg: create new file :data.txt file 
write anything like : hi everyone! welcome to nodejs!

//to read this in nodejs terminal we will write coding in localmodules.js file
//fs:file system
  const fs=require('fs')
  fs.readFile('data.txt', 'utf8', function(err,data){
    console.log(data)
  })

<result in terminal : hi everyone! welcome to nodejs!

//utf8 : to convert string in text for read
//readFile: inbuilt funciton 
syntax
fs.readFile(filename,encoding,callback function)
 fs.readFile('data.txt', 'utf8', function(err,data){
    console.log(data)
  })

????????????????????????
if you want to read two different file
//another file name: notex.txt ---text this is notes file

    //fs:file system
  const fs=require('fs')
  fs.readFile('data.txt', 'utf8', function(err,data){
    console.log(data)
  })  
  fs.readFile('notes.txt','utf8',function(err,data){
    console.log('notes data ' + data)
  })
<hi everyone! welcome to nodejs!
<notes data this is notes file

//nodejs call as non blocking

??????????????????????????????


  const fs=require('fs')

  const file1=fs.readFileSync('data.txt')
  console.log(file1.toString())

  const file2=fs.readFileSync('notes.txt')
  console.log(file2.toString())
<hi everyone! welcome to nodejs!
<this is notes file


????????????????????
if you add more text on data txt file

const fs=require('fs')

  const file1=fs.readFileSync('data.txt')
  console.log(file1.toString())

  //we can write like this also

  const file2=fs.readFileSync('notes.txt')
  console.log(file2.toString())
<hi everyone! welcome to nodejs!
Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book
this is notes file

??????????????????????????????
 //fs:file system
  const fs=require('fs')

  fs.readFile('data.txt', 'utf8', function(err,data){
    console.log(data)
  })  
  
  fs.readFile('notes.txt','utf8',function(err,data){
    console.log('notes data ' + data)
  })
<hi everyone! welcome to nodejs!
Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book
<notes data this is notes file

!!!!!!!!!!!!!!!!!!!!!!!!!!!
 //write new data inside the file
//writeFile: new data will write and previous data will delete

 const fs=require('fs')
  fs.writeFile('data.txt',"hey there, this is my new data! ",function(err){
    if(err){
      console.log(err)
    }
    console.log('new data added!')
  })
<new data added!
<in data.txt file : data has been changed and come new text " hey there, this is my new data! : and delete previous data


??????????????????????
if your file is doesn't exist if will create new file same like data.txt file

const fs=require('fs')
  fs.writeFile('ata.txt',"hey there, this is my new data! ",function(err){
    if(err){
      console.log(err)
    }
    console.log('new data added!')
  }) 
<new data added!
<new file: ata.txt . inside it: hey there, this is my new data! 


!!!!!!!!!!!!!!!!!!!!!!!!!!!
overwrite solution
appendFile: existing data + new data add

const fs=require('fs')
  fs.writeFile('data.txt',"hey there, this is my new data! ",function(err){
    if(err){
      console.log(err)
    }
    console.log('new data added!')
  }) 
  fs.appendFile('notes.txt', "add my new data in notes file",function(err){
    if(err){
      console.log(err)
    }
    console.log('data added in notes')
  })
<data added in notes
<new data added!
<in notes.txt file: this is notes fileadd my new data in notes file
//appendFile: existing data + new data add ) add in notes.txt

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
fs.writeFileSync  vs writeFile
fs.writeFileSync : data will show line wise . syncronuss data. In which order u have write the code on that it will
execute the data
writeFile: which text is small that will come first after that another one. Not follow any order.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
video: 1:21

https://nodejs.org/docs/latest/api/http.html

http module
use for making connection and creating server

what is a server?
A server is a computer program or device that provides a service to another 
computer program and its user, also known as the client. In a data center, 
the physical computer that a server program runs on is also frequently referred to as a server.

in httpmodule.js file

const http=require('http')
http.createServer(function(req,res){
  res.writeHead(200,{'Content-Type':'text/plain'})
res.write('hello from server')
res.end()  
}).listen(8080)

<go in : localhost:8080


Go in this:  http://localhost:8080/

8080/3000
