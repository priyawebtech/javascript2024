callback, settimeout, promises, async await

//function(function) --> callback
//setTimeout
setTimeout(()=>{
  //code
  console.log('I am a callbackfunction.. i will run after 2 seconds')
},2000)

< I am a callbackfunction.. i will run after 2 seconds

/// execution starts and ecution ends will run first then ...
console.log('execution starts....')
setTimeout(()=>{
  //code
  console.log('I am a callbackfunction.. i will run after 2 seconds')
},2000)
console.log('execution ends....')
<execution starts....
main.js:7 execution ends....
main.js:5 I am a callbackfunction.. i will run after 2 seconds

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//callback examples
function add(x,y){
  console.log(x+y)
  console.log(multiply,x,y)
}

function multiply(x,y){
  console.log(x * y)
}

//callback is variable here
function calculate(callback,x,y){
 return callback(x,y)
}

// best example of function inside another function 
calculate(add,6,4)// add is the callback function here
// what we done above is 1. calculate, 2 add , 3 calculate, 4 multiply
<10

//this is call callback hell function under another function. It might got confusing in which error. difficult to find error. very difficult to track
function(callback,x,y)
callback(callback2,a,b)
callback2(callback3,w,r)
//promises are the solution of callback hell

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11111


//Promises ---> chain operations/data
//promises is used for --async operations
// 3 status of promises -- resolve, pending, reject
//Promise js inbuild class
